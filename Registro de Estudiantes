// main.dart
import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Registro de Estudiantes',
      theme: ThemeData(primarySwatch: Colors.blue),
      home: AuthScreen(),
    );
  }
}

class AuthScreen extends StatelessWidget {
  final TextEditingController usernameController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Autenticación', style: TextStyle(color: Colors.red))),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Image.asset('assets/logo.png', height: 100), // Logo de la empresa
              SizedBox(height: 20),
              TextField(
                controller: usernameController,
                decoration: InputDecoration(labelText: 'Usuario'),
              ),
              TextField(
                controller: passwordController,
                decoration: InputDecoration(labelText: 'Contraseña'),
                obscureText: true,
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: () {
                  // Validación simple
                  if (usernameController.text == 'admin' && passwordController.text == 'password') {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => RegistrationScreen()),
                    );
                  } else {
                    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Usuario o contraseña incorrectos')));
                  }
                },
                child: Text('Ingresar'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class RegistrationScreen extends StatefulWidget {
  @override
  _RegistrationScreenState createState() => _RegistrationScreenState();
}

class _RegistrationScreenState extends State<RegistrationScreen> {
  final TextEditingController nameController = TextEditingController();
  final TextEditingController ageController = TextEditingController();
  DateTime? selectedDate;
  String? selectedCountry;
  String? selectedCity;

  final List<String> countries = ['Ecuador', 'Colombia', 'Perú'];
  final Map<String, List<String>> cities = {
    'Ecuador': ['Quito', 'Guayaquil', 'Cuenca'],
    'Colombia': ['Bogotá', 'Medellín', 'Cali'],
    'Perú': ['Lima', 'Arequipa', 'Cusco'],
  };

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Registro de Estudiantes', style: TextStyle(color: Colors.blue))),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: nameController,
              decoration: InputDecoration(labelText: 'Nombres'),
            ),
            TextField(
              controller: ageController,
              decoration: InputDecoration(labelText: 'Edad'),
              keyboardType: TextInputType.number,
            ),
            ElevatedButton(
              onPressed: () async {
                final DateTime? date = await showDatePicker(
                  context: context,
                  initialDate: selectedDate ?? DateTime.now(),
                  firstDate: DateTime(2000),
                  lastDate: DateTime(2101),
                );
                if (date != null && date != selectedDate) {
                  setState(() {
                    selectedDate = date;
                  });
                }
              },
              child: Text(selectedDate == null ? 'Seleccionar Fecha' : selectedDate!.toLocal().toString().split(' ')[0]),
            ),
            DropdownButton<String>(
              hint: Text('Seleccionar País'),
              value: selectedCountry,
              onChanged: (String? newValue) {
                setState(() {
                  selectedCountry = newValue;
                  selectedCity = null; // Reset city when country changes
                });
              },
              items: countries.map<DropdownMenuItem<String>>((String value) {
                return DropdownMenuItem<String>(
                  value: value,
                  child: Text(value),
                );
              }).toList(),
            ),
            DropdownButton<String>(
              hint: Text('Seleccionar Ciudad'),
              value: selectedCity,
              onChanged: (String? newValue) {
                setState(() {
                  selectedCity = newValue;
                });
              },
              items: selectedCountry == null
                  ? []
                  : cities[selectedCountry!]!.map<DropdownMenuItem<String>>((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(value),
                      );
                    }).toList(),
            ),
            ElevatedButton(
              onPressed: () {
                if (nameController.text.isNotEmpty && ageController.text.isNotEmpty && selectedDate != null && selectedCountry != null && selectedCity != null) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(
                      builder: (context) => SummaryScreen(
                        name: nameController.text,
                        age: ageController.text,
                        date: selectedDate!,
                        country: selectedCountry!,
                        city: selectedCity!,
                      ),
                    ),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Por favor complete todos los campos')));
                }
              },
              child: Text('Registrar'),
            ),
          ],
        ),
      ),
    );
  }
}

class SummaryScreen extends StatelessWidget {
  final String name;
  final String age;
  final DateTime date;
  final String country;
  final String city;

  SummaryScreen({required this.name, required this.age, required this.date, required this.country, required this.city});

  @override
  Widget build(BuildContext context) {
    double courseValue = 1500;
    double initialPayment = courseValue * 0.30;
    double remainingAmount = courseValue - initialPayment;
    double monthlyPayment = (remainingAmount / 4) * 1.05; // 5% surcharge
    double totalValue = initialPayment + (monthlyPayment * 4);

    return Scaffold(
      appBar: AppBar(title: Text('Resumen')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text('Nombres: $name', style: TextStyle(fontSize: 18)),
            Text('Edad: $age', style: TextStyle(fontSize: 18)),
            Text('Fecha: ${date.toLocal().toString().split(' ')[0]}', style: TextStyle(fontSize: 18)),
            Text('Ciudad: $city', style: TextStyle(fontSize: 18)),
            Text('País: $country', style: TextStyle(fontSize: 18)),
            Text('Cuota Inicial: \$${initialPayment.toStringAsFixed(2)}', style: TextStyle(fontSize: 18)),
            Text('Cuota Mensual: \$${monthlyPayment.toStringAsFixed(2)}', style: TextStyle(fontSize: 18)),
            Text('Valor Total: \$${totalValue.toStringAsFixed(2)}', style: TextStyle(fontSize: 18)),
          ],
        ),
      ),
    );
  }
}

